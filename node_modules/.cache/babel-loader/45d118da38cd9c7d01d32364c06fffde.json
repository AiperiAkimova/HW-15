{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plann\\\\Desktop\\\\hw-15\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { useReducer } from 'react'; ////1-вариант\n// const passReducer = (prevState, action) => {\n//   if(action.type === 'USER_INPUT'){\n//     return {\n//       value: action.passwordValue, \n//       isValid: action.passwordValue.trim().length > 6,\n//     }\n//   }\n//   if(action.type === 'INPUT_BLUR'){\n//     return {\n//       value: prevState.value,\n//       isValid: prevState.value.trim().length > 6,\n//     };\n//   }\n//   return {\n//     value: '',\n//     isValid: false,\n//   };\n// };\n// const Login = (props) => {\n//   const [passwordState, dispatchPass] = useReducer((passReducer), {\n//     isValid: '',\n//     value: ''\n//   })\n//    const [enteredEmail, setEnteredEmail] = useState('');\n//    const [emailIsValid, setEmailIsValid] = useState();\n//   //const [enteredPassword, setEnteredPassword] = useState('');//password жазылат\n//   //const [passwordIsValid, setPasswordIsValid] = useState();// password тууралыгын текшерет\n//   const [formIsValid, setFormIsValid] = useState(false);\n//   useEffect(() =>{\n//     const timer = setTimeout(() => {\n//       setFormIsValid(enteredEmail.includes('@') && passwordState.value.trim().length > 6)\n//       console.log('changed');\n//     }, 500); \n//   //   //clean up function\n//     return () => {\n//       clearTimeout(timer) \n//     }\n//   }, [enteredEmail, passwordState.value]);\n//   const emailChangeHandler = (event) => { \n//    setEnteredEmail(event.target.value); \n//     // dispatchEmail({type: 'USER_INPUT', emailValue: event.target.value})\n//   //   // setFormIsValid(\n//   //   //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n//   //   // );\n//   };\n//   const passwordChangeHandler = (event) => {\n//     // setEnteredPassword(event.target.value);\n//     dispatchPass({type: 'USER_INPUT', passwordValue: event.target.value})\n//     // setFormIsValid(\n//     //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n//     // );\n//   };\n//   const validateEmailHandler = () => {\n//     setEmailIsValid(enteredEmail.includes('@'));\n//     // dispatchEmail({type: 'INPUT_BLUR' })\n//   }; \n//   const validatePasswordHandler = () => {\n//     // setPasswordIsValid(enteredPassword.trim().length > 6);\n//     dispatchPass({type: \"INPUT_BLUR\"})\n//   };\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin( passwordState);\n//   };\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={enteredEmail}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={passwordState.value}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}> \n//             Login\n//           </Button> \n//           {/* Эгерде форма туура толтурулса жарактуу болсо анда кнопканы басууга болот антпесе иштебейт */}\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n//////////////////////////////////////////////////////////////////////\n////2-вариант\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction formReduce(prevState, action) {\n  if (action.type === 'USER_INPUT') {\n    return {\n      valueEmail: action.emailValue,\n      isEmailValid: action.emailValue.includes('@')\n    };\n  }\n\n  if (action.action === 'INPUT_BLUR') {\n    return {\n      valueEmail: prevState.emailValue,\n      isEmailValid: prevState.emailValue.includes('@')\n    };\n  }\n\n  if (action.type === 'PASSWORD_INPUT') {\n    return {\n      value: action.passwordValue,\n      isPasswordValue: action.passwordValue.trim().length > 6\n    };\n  }\n\n  if (action.action === 'PASSWORD_BLUR') {\n    return {\n      passwordValue: prevState.passwordValue,\n      isPasswordValue: prevState.passwordValue.trim().length > 6\n    };\n  }\n\n  return {\n    emailValue: prevState.emailValue,\n    isEmailValue: prevState.isEmailValue,\n    passwordValue: prevState.passwordValue,\n    isPasswordValue: prevState.isPasswordValue\n  };\n}\n\nconst Login = props => {\n  _s();\n\n  const [formState, dispatchForm] = useReducer(formReduce, {\n    emailValue: '',\n    isEmailValue: '',\n    passwordValue: '',\n    isPasswordValue: ''\n  });\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFormIsValid(formState.emailValue.includes('@'));\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [formState.emailValue, formState.passwordValue]);\n\n  const emailChangeHandler = event => {\n    dispatchForm({\n      type: 'USER_INPUT',\n      emailValue: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchForm({\n      type: 'PASSWORD_INPUT',\n      passwordValue: event.target.value\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchForm({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchForm({\n      type: 'PASSWORD_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(formState.emailValue, formState.passwordValue);\n  };\n\n  const value = formState.emailValue;\n  const valuepass = formState.passwordValue;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${formState.isEmailValue === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${formState.isPasswordValue === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: valuepass,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Login, \"Ia3fipw1dfrWWTXg08i2LofVI5A=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Card","classes","Button","useReducer","formReduce","prevState","action","type","valueEmail","emailValue","isEmailValid","includes","value","passwordValue","isPasswordValue","trim","length","isEmailValue","Login","props","formState","dispatchForm","formIsValid","setFormIsValid","timer","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","valuepass","login","control","invalid","actions","btn"],"sources":["C:/Users/plann/Desktop/hw-15/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { useReducer } from 'react';\n\n\n////1-вариант\n// const passReducer = (prevState, action) => {\n//   if(action.type === 'USER_INPUT'){\n//     return {\n//       value: action.passwordValue, \n//       isValid: action.passwordValue.trim().length > 6,\n//     }\n//   }\n//   if(action.type === 'INPUT_BLUR'){\n//     return {\n//       value: prevState.value,\n//       isValid: prevState.value.trim().length > 6,\n//     };\n//   }\n//   return {\n//     value: '',\n//     isValid: false,\n//   };\n// };\n\n// const Login = (props) => {\n\n//   const [passwordState, dispatchPass] = useReducer((passReducer), {\n//     isValid: '',\n//     value: ''\n//   })\n//    const [enteredEmail, setEnteredEmail] = useState('');\n//    const [emailIsValid, setEmailIsValid] = useState();\n//   //const [enteredPassword, setEnteredPassword] = useState('');//password жазылат\n//   //const [passwordIsValid, setPasswordIsValid] = useState();// password тууралыгын текшерет\n//   const [formIsValid, setFormIsValid] = useState(false);\n//   useEffect(() =>{\n//     const timer = setTimeout(() => {\n//       setFormIsValid(enteredEmail.includes('@') && passwordState.value.trim().length > 6)\n//       console.log('changed');\n//     }, 500); \n\n//   //   //clean up function\n//     return () => {\n//       clearTimeout(timer) \n//     }\n  \n//   }, [enteredEmail, passwordState.value]);\n\n//   const emailChangeHandler = (event) => { \n//    setEnteredEmail(event.target.value); \n//     // dispatchEmail({type: 'USER_INPUT', emailValue: event.target.value})\n//   //   // setFormIsValid(\n//   //   //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n//   //   // );\n//   };\n\n//   const passwordChangeHandler = (event) => {\n//     // setEnteredPassword(event.target.value);\n//     dispatchPass({type: 'USER_INPUT', passwordValue: event.target.value})\n\n//     // setFormIsValid(\n//     //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n//     // );\n//   };\n\n//   const validateEmailHandler = () => {\n//     setEmailIsValid(enteredEmail.includes('@'));\n//     // dispatchEmail({type: 'INPUT_BLUR' })\n//   }; \n\n//   const validatePasswordHandler = () => {\n//     // setPasswordIsValid(enteredPassword.trim().length > 6);\n//     dispatchPass({type: \"INPUT_BLUR\"})\n//   };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin( passwordState);\n//   };\n \n\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={enteredEmail}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={passwordState.value}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}> \n//             Login\n//           </Button> \n//           {/* Эгерде форма туура толтурулса жарактуу болсо анда кнопканы басууга болот антпесе иштебейт */}\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n//////////////////////////////////////////////////////////////////////\n\n////2-вариант\n\nfunction formReduce(prevState, action) {\n\n  if (action.type === 'USER_INPUT') {\n    return {\n      valueEmail: action.emailValue,\n      isEmailValid: action.emailValue.includes('@'),\n    }\n  }\n  if (action.action === 'INPUT_BLUR') {\n    return {\n      valueEmail: prevState.emailValue,\n      isEmailValid: prevState.emailValue.includes('@'),\n    }\n  }\n\n  if (action.type === 'PASSWORD_INPUT') {\n    return {\n      value: action.passwordValue,\n      isPasswordValue: action.passwordValue.trim().length > 6,\n    }\n  }\n  if (action.action === 'PASSWORD_BLUR') {\n    return {\n      passwordValue: prevState.passwordValue,\n      isPasswordValue: prevState.passwordValue.trim().length > 6,\n    }\n  }\n \n  \n  return {\n    emailValue: prevState.emailValue,\n    isEmailValue: prevState.isEmailValue,\n    passwordValue: prevState.passwordValue,\n    isPasswordValue: prevState.isPasswordValue\n  }\n\n}\n\nconst Login = (props) => {\n\n  const [formState, dispatchForm] = useReducer(formReduce, {\n    emailValue: '',\n    isEmailValue: '',\n    passwordValue: '',\n    isPasswordValue: '',\n  })\n  const [formIsValid, setFormIsValid] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFormIsValid(formState.emailValue.includes('@'))\n    }, 500)\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [formState.emailValue, formState.passwordValue])\n\n\n  const emailChangeHandler = (event) => {\n    dispatchForm({ type: 'USER_INPUT', emailValue: event.target.value })\n  }\n\n  const passwordChangeHandler = (event) => {\n    dispatchForm({ type: 'PASSWORD_INPUT', passwordValue: event.target.value })\n  }\n  \n  const validateEmailHandler = () => {\n    dispatchForm({ type: 'INPUT_BLUR' })\n  }\n\n  const validatePasswordHandler = () => {\n    dispatchForm({ type: 'PASSWORD_BLUR' }) \n  }\n\n\n  const submitHandler = (event) => {\n    event.preventDefault() \n    props.onLogin(formState.emailValue, formState.passwordValue) \n  }\n \n  const value=formState.emailValue\n  const valuepass=formState.passwordValue\n\n  \n    return (\n      <Card className={classes.login}>\n        <form onSubmit={submitHandler}>\n          <div\n            className={`${classes.control} ${\n              formState.isEmailValue === false ? classes.invalid : '' \n            }`}\n          >\n            <label htmlFor=\"email\">E-Mail</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={value}\n              onChange={emailChangeHandler}\n              onBlur={validateEmailHandler} \n            />\n          </div>\n          <div\n            className={`${classes.control} ${\n              formState.isPasswordValue === false ? classes.invalid : '' \n            }`}\n          >\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={valuepass}\n              onChange={passwordChangeHandler}\n              onBlur={validatePasswordHandler}\n            />\n          </div>\n          <div className={classes.actions}>\n            <Button\n              type=\"submit\"\n              className={classes.btn}\n              disabled={!formIsValid}\n            >\n              Login\n            </Button>\n          </div>\n        </form>\n      </Card>\n    )\n  }\n  \nexport default Login;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}