{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plann\\\\Desktop\\\\hw-15\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { useReducer } from 'react'; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst passReducer = (prevState, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.passwordValue,\n      isValid: action.passwordValue.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [passwordState, dispatchPass] = useReducer(passReducer, {\n    isValid: '',\n    value: ''\n  });\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState(); //const [enteredPassword, setEnteredPassword] = useState('');//password жазылат\n  //const [passwordIsValid, setPasswordIsValid] = useState();// password тууралыгын текшерет\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFormIsValid(enteredEmail.includes('@') && passwordState.value.trim().length > 6);\n      console.log('changed');\n    }, 500); //   //clean up function\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredEmail, passwordState.value]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value); // dispatchEmail({type: 'USER_INPUT', emailValue: event.target.value})\n    //   // setFormIsValid(\n    //   //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n    //   // );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPass({\n      type: 'USER_INPUT',\n      passwordValue: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@')); // dispatchEmail({type: 'INPUT_BLUR' })\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPass({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(passwordState);\n  }; // submit кылганда props ичине келген onlogin ди чакырабыз loginHandler функциясын иштетбиз, \n  //submitHandler функциясынын ичинде чакырылган onLogin озуно параметрлерди алат(жазган email м-н password алат) \n  //жана ал App.js теги loginHandler функциясындагы email, password ко келет\n  //эки параметрди состояниедан алабыз туура толтурулса гана иштейт, антпесе кнопко иштебейт\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ALZn88L0Rx1WsIwoRgAePc6ZEi0=\");\n\n_c = Login;\nexport default Login; //React Hooks - бул функционалдык компоненттерден Reactтын абалына жана жашоо циклине кошулууга мүмкүндүк берген функциялар. \n//Бул React'ти класстарсыз колдонууга мүмкүндүк берет. Эң негизгиси, хуктар өз каалоосу боюнча иштетилет жана учурдагы код менен иштейт.\n\n/*useState: абалдын маанисин жана аны түзөтүү функциясын кайтарат. Бул хук класстын компоненттеринде табылган this.state жана this.setState ге барабар.\nuseEffect: Функционалдык компоненттерден терс таасирлерди аткарат. Рендер болгондон кийин дагы бир терс эффект ишке ашырылат, бул React'те чектелген итеративдик жүрүм-турумга мүмкүндүк берет.*/\n//useEffect - функционалдык компоненттин ичиндеги программанын абалына тиешелүү шарттуу өзгөртүүлөрдү түзүүгө мүмкүндүк берет.\n// ал функционалдык компоненттерде терс таасирлерди аткарат\n// UseEffect React DOMди жаңырткандан кийин кошумча кодду иштетүүгө мүмкүндүк берет.\n// useEffect(() => {\n//   // какой-то код\n//     }, [someProp, someState]);\n//Биринчи аргумент -  кайра чалуу функциясы болуп саналат, ар бир перезагрузкада чакырылат.\n//Экинчи аргумент көз карандылыктардын кошумча массивдери болуп саналат, ал хукка максаттуу абалда өзгөрүү болгондо гана кайра чалууну аткарууну айтат. \n/////////////////////////////////////////////////////////////////////\n//Элемент фокусту жоготкондо onBlur событиясы иштейт. Бул адатта учурдагы документтин башка элементин басканда болот\n//Onblur окуясы onfocus окуясына карама-каршы келет.\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Card","classes","Button","useReducer","passReducer","prevState","action","type","value","passwordValue","isValid","trim","length","Login","props","passwordState","dispatchPass","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","formIsValid","setFormIsValid","timer","setTimeout","includes","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/plann/Desktop/hw-15/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { useReducer } from 'react';\n\n\n//\nconst passReducer = (prevState, action) => {\n  if(action.type === 'USER_INPUT'){\n    return {\n      value: action.passwordValue, \n      isValid: action.passwordValue.trim().length > 6,\n    }\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return {\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 6,\n    };\n  }\n  return {\n    value: '',\n    isValid: false,\n  };\n};\n\nconst Login = (props) => {\n\n  const [passwordState, dispatchPass] = useReducer((passReducer), {\n    isValid: '',\n    value: ''\n  })\n   const [enteredEmail, setEnteredEmail] = useState('');\n   const [emailIsValid, setEmailIsValid] = useState();\n  //const [enteredPassword, setEnteredPassword] = useState('');//password жазылат\n  //const [passwordIsValid, setPasswordIsValid] = useState();// password тууралыгын текшерет\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() =>{\n    const timer = setTimeout(() => {\n      setFormIsValid(enteredEmail.includes('@') && passwordState.value.trim().length > 6)\n      console.log('changed');\n    }, 500); \n\n  //   //clean up function\n    return () => {\n      clearTimeout(timer) \n    }\n  \n  }, [enteredEmail, passwordState.value]);\n\n  const emailChangeHandler = (event) => { \n   setEnteredEmail(event.target.value); \n    // dispatchEmail({type: 'USER_INPUT', emailValue: event.target.value})\n  //   // setFormIsValid(\n  //   //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n  //   // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPass({type: 'USER_INPUT', passwordValue: event.target.value})\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n    // dispatchEmail({type: 'INPUT_BLUR' })\n  }; \n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPass({type: \"INPUT_BLUR\"})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin( passwordState);\n  };\n  // submit кылганда props ичине келген onlogin ди чакырабыз loginHandler функциясын иштетбиз, \n  //submitHandler функциясынын ичинде чакырылган onLogin озуно параметрлерди алат(жазган email м-н password алат) \n  //жана ал App.js теги loginHandler функциясындагы email, password ко келет\n  //эки параметрди состояниедан алабыз туура толтурулса гана иштейт, антпесе кнопко иштебейт\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}> \n            Login\n          </Button> \n          {/* Эгерде форма туура толтурулса жарактуу болсо анда кнопканы басууга болот антпесе иштебейт */}\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n\n//React Hooks - бул функционалдык компоненттерден Reactтын абалына жана жашоо циклине кошулууга мүмкүндүк берген функциялар. \n//Бул React'ти класстарсыз колдонууга мүмкүндүк берет. Эң негизгиси, хуктар өз каалоосу боюнча иштетилет жана учурдагы код менен иштейт.\n\n\n/*useState: абалдын маанисин жана аны түзөтүү функциясын кайтарат. Бул хук класстын компоненттеринде табылган this.state жана this.setState ге барабар.\nuseEffect: Функционалдык компоненттерден терс таасирлерди аткарат. Рендер болгондон кийин дагы бир терс эффект ишке ашырылат, бул React'те чектелген итеративдик жүрүм-турумга мүмкүндүк берет.*/\n\n//useEffect - функционалдык компоненттин ичиндеги программанын абалына тиешелүү шарттуу өзгөртүүлөрдү түзүүгө мүмкүндүк берет.\n// ал функционалдык компоненттерде терс таасирлерди аткарат\n// UseEffect React DOMди жаңырткандан кийин кошумча кодду иштетүүгө мүмкүндүк берет.\n// useEffect(() => {\n//   // какой-то код\n//     }, [someProp, someState]);\n\n//Биринчи аргумент -  кайра чалуу функциясы болуп саналат, ар бир перезагрузкада чакырылат.\n\n//Экинчи аргумент көз карандылыктардын кошумча массивдери болуп саналат, ал хукка максаттуу абалда өзгөрүү болгондо гана кайра чалууну аткарууну айтат. \n\n/////////////////////////////////////////////////////////////////////\n//Элемент фокусту жоготкондо onBlur событиясы иштейт. Бул адатта учурдагы документтин башка элементин басканда болот\n//Onblur окуясы onfocus окуясына карама-каршы келет."],"mappings":"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"},"metadata":{},"sourceType":"module"}