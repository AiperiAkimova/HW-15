{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plann\\\\Desktop\\\\hw-15\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { useReducer } from 'react'; ////1-вариант\n// const passReducer = (prevState, action) => {\n//   if(action.type === 'USER_INPUT'){\n//     return {\n//       value: action.passwordValue, \n//       isValid: action.passwordValue.trim().length > 6,\n//     }\n//   }\n//   if(action.type === 'INPUT_BLUR'){\n//     return {\n//       value: prevState.value,\n//       isValid: prevState.value.trim().length > 6,\n//     };\n//   }\n//   return {\n//     value: '',\n//     isValid: false,\n//   };\n// };\n// const Login = (props) => {\n//   const [passwordState, dispatchPass] = useReducer((passReducer), {\n//     isValid: '',\n//     value: ''\n//   })\n//    const [enteredEmail, setEnteredEmail] = useState('');\n//    const [emailIsValid, setEmailIsValid] = useState();\n//   //const [enteredPassword, setEnteredPassword] = useState('');//password жазылат\n//   //const [passwordIsValid, setPasswordIsValid] = useState();// password тууралыгын текшерет\n//   const [formIsValid, setFormIsValid] = useState(false);\n//   useEffect(() =>{\n//     const timer = setTimeout(() => {\n//       setFormIsValid(enteredEmail.includes('@') && passwordState.value.trim().length > 6)\n//       console.log('changed');\n//     }, 500); \n//   //   //clean up function\n//     return () => {\n//       clearTimeout(timer) \n//     }\n//   }, [enteredEmail, passwordState.value]);\n//   const emailChangeHandler = (event) => { \n//    setEnteredEmail(event.target.value); \n//     // dispatchEmail({type: 'USER_INPUT', emailValue: event.target.value})\n//   //   // setFormIsValid(\n//   //   //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n//   //   // );\n//   };\n//   const passwordChangeHandler = (event) => {\n//     // setEnteredPassword(event.target.value);\n//     dispatchPass({type: 'USER_INPUT', passwordValue: event.target.value})\n//     // setFormIsValid(\n//     //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n//     // );\n//   };\n//   const validateEmailHandler = () => {\n//     setEmailIsValid(enteredEmail.includes('@'));\n//     // dispatchEmail({type: 'INPUT_BLUR' })\n//   }; \n//   const validatePasswordHandler = () => {\n//     // setPasswordIsValid(enteredPassword.trim().length > 6);\n//     dispatchPass({type: \"INPUT_BLUR\"})\n//   };\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin( passwordState);\n//   };\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={enteredEmail}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={passwordState.value}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}> \n//             Login\n//           </Button> \n//           {/* Эгерде форма туура толтурулса жарактуу болсо анда кнопканы басууга болот антпесе иштебейт */}\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n//////////////////////////////////////////////////////////////////////\n////2-вариант\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction formReduce(prevState, action) {\n  if (action.type === 'PASSWORD_VALUE') {\n    return {\n      passwordValue: action.passwordValue,\n      isPasswordValue: action.passwordValue\n    };\n  }\n\n  if (action.action === 'PASSWORD_ONBLUR') {\n    return {\n      passwordValue: prevState.passwordValue,\n      isPasswordValue: prevState.passwordValue\n    };\n  }\n\n  if (action.type === 'EMAIL_VALUE') {\n    return {\n      emailValue: action.emailValue,\n      isEmailValue: action.emailValue.includes('@')\n    };\n  }\n\n  if (action.action === 'INPUT_ONBLUR') {\n    return {\n      emailValue: prevState.emailValue,\n      isEmailValue: prevState.emailValue.includes('@')\n    };\n  }\n\n  if (action.type === \"IS_FORM_VALID\") {\n    return {\n      isFormValid: action.isFormValid.includes('@')\n    };\n  }\n\n  return { ...prevState\n  };\n}\n\nconst Login = props => {\n  _s();\n\n  const [formState, dispatchForm] = useReducer(formReduce, {\n    emailValue: '',\n    isEmailValue: false,\n    passwordValue: '',\n    isPasswordValue: false,\n    isFormValid: false\n  });\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFormIsValid(formState.emailValue.includes('@'));\n    }, 500); //clean up function\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [formState.emailValue, formState.passwordValue]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value); // dispatchEmail({type: 'USER_INPUT', emailValue: event.target.value})\n    //   // setFormIsValid(\n    //   //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n    //   // );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPass({\n      type: 'USER_INPUT',\n      passwordValue: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@')); // dispatchEmail({type: 'INPUT_BLUR' })\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPass({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(passwordState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"aVaFGV4uaxYeOv1NG5RAiLo0xpI=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Card","classes","Button","useReducer","formReduce","prevState","action","type","passwordValue","isPasswordValue","emailValue","isEmailValue","includes","isFormValid","Login","props","formState","dispatchForm","formIsValid","setFormIsValid","timer","setTimeout","clearTimeout","emailChangeHandler","event","setEnteredEmail","target","value","passwordChangeHandler","dispatchPass","validateEmailHandler","setEmailIsValid","enteredEmail","validatePasswordHandler","submitHandler","preventDefault","onLogin","passwordState","login","control","emailIsValid","invalid","isValid","actions","btn"],"sources":["C:/Users/plann/Desktop/hw-15/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { useReducer } from 'react';\n\n\n////1-вариант\n// const passReducer = (prevState, action) => {\n//   if(action.type === 'USER_INPUT'){\n//     return {\n//       value: action.passwordValue, \n//       isValid: action.passwordValue.trim().length > 6,\n//     }\n//   }\n//   if(action.type === 'INPUT_BLUR'){\n//     return {\n//       value: prevState.value,\n//       isValid: prevState.value.trim().length > 6,\n//     };\n//   }\n//   return {\n//     value: '',\n//     isValid: false,\n//   };\n// };\n\n// const Login = (props) => {\n\n//   const [passwordState, dispatchPass] = useReducer((passReducer), {\n//     isValid: '',\n//     value: ''\n//   })\n//    const [enteredEmail, setEnteredEmail] = useState('');\n//    const [emailIsValid, setEmailIsValid] = useState();\n//   //const [enteredPassword, setEnteredPassword] = useState('');//password жазылат\n//   //const [passwordIsValid, setPasswordIsValid] = useState();// password тууралыгын текшерет\n//   const [formIsValid, setFormIsValid] = useState(false);\n//   useEffect(() =>{\n//     const timer = setTimeout(() => {\n//       setFormIsValid(enteredEmail.includes('@') && passwordState.value.trim().length > 6)\n//       console.log('changed');\n//     }, 500); \n\n//   //   //clean up function\n//     return () => {\n//       clearTimeout(timer) \n//     }\n  \n//   }, [enteredEmail, passwordState.value]);\n\n//   const emailChangeHandler = (event) => { \n//    setEnteredEmail(event.target.value); \n//     // dispatchEmail({type: 'USER_INPUT', emailValue: event.target.value})\n//   //   // setFormIsValid(\n//   //   //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n//   //   // );\n//   };\n\n//   const passwordChangeHandler = (event) => {\n//     // setEnteredPassword(event.target.value);\n//     dispatchPass({type: 'USER_INPUT', passwordValue: event.target.value})\n\n//     // setFormIsValid(\n//     //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n//     // );\n//   };\n\n//   const validateEmailHandler = () => {\n//     setEmailIsValid(enteredEmail.includes('@'));\n//     // dispatchEmail({type: 'INPUT_BLUR' })\n//   }; \n\n//   const validatePasswordHandler = () => {\n//     // setPasswordIsValid(enteredPassword.trim().length > 6);\n//     dispatchPass({type: \"INPUT_BLUR\"})\n//   };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin( passwordState);\n//   };\n \n\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailIsValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={enteredEmail}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={passwordState.value}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}> \n//             Login\n//           </Button> \n//           {/* Эгерде форма туура толтурулса жарактуу болсо анда кнопканы басууга болот антпесе иштебейт */}\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n//////////////////////////////////////////////////////////////////////\n\n////2-вариант\n\nfunction formReduce(prevState, action) {\n  if (action.type === 'PASSWORD_VALUE') {\n    return {\n      passwordValue: action.passwordValue,\n      isPasswordValue: action.passwordValue,\n    }\n  }\n  if (action.action === 'PASSWORD_ONBLUR') {\n    return {\n      passwordValue: prevState.passwordValue,\n      isPasswordValue: prevState.passwordValue,\n    }\n  }\n  if (action.type === 'EMAIL_VALUE') {\n    return {\n      emailValue: action.emailValue,\n      isEmailValue: action.emailValue.includes('@'),\n    }\n  }\n  if (action.action === 'INPUT_ONBLUR') {\n    return {\n      emailValue: prevState.emailValue,\n      isEmailValue: prevState.emailValue.includes('@'),\n    }\n  }\n  if(action.type===\"IS_FORM_VALID\"){\n    return{\n      isFormValid:action.isFormValid.includes('@')\n    }\n  }\n  return {\n    ...prevState,\n  }\n}\n\nconst Login = (props) => {\n\n  const [formState, dispatchForm] = useReducer(formReduce, {\n    emailValue: '',\n    isEmailValue: false,\n    passwordValue: '',\n    isPasswordValue: false,\n    isFormValid: false,\n  })\n  const [formIsValid, setFormIsValid] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFormIsValid(formState.emailValue.includes('@'))\n    }, 500)\n    //clean up function\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [formState.emailValue, formState.passwordValue])\n\n\n  const emailChangeHandler = (event) => { \n   setEnteredEmail(event.target.value); \n    // dispatchEmail({type: 'USER_INPUT', emailValue: event.target.value})\n  //   // setFormIsValid(\n  //   //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n  //   // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPass({type: 'USER_INPUT', passwordValue: event.target.value})\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n    // dispatchEmail({type: 'INPUT_BLUR' })\n  }; \n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPass({type: \"INPUT_BLUR\"})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin( passwordState);\n  };\n \n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}> \n            Login\n          </Button> \n          {/* Эгерде форма туура толтурулса жарактуу болсо анда кнопканы басууга болот антпесе иштебейт */}\n        </div>\n      </form>\n    </Card>\n  );\n};\nexport default Login;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}