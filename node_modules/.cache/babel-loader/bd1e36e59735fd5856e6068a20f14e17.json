{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plann\\\\Desktop\\\\hw-15\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Login from './component/Login/Login';\nimport Home from './component/Home/Home';\nimport MainHeader from './component/MainHeader/MainHeader';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); //useEffect теги запростун кайра кайталануусуна тассирин тийгизген параметр\n  //анткени биз форманы толтурганда true болуп loginHandler функциясы иштейт дагы запрос кайра иштейт\n\n  useEffect(() => {\n    const stotredUserLoggedInfo = localStorage.getItem('isLoggedIn'); // ключ аркылуу item алсак болот\n\n    if (stotredUserLoggedInfo === '1') {\n      //бул жерде логика жазылып жатат эгер stotredUserLoggedInfo 1 ге барабар болсо setIsLoggedIn true болот\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = async (email, password) => {\n    localStorage.setItem('isLoggedIn', '1'); //item бул жерде 1 себеби ал true болгону учун бир нерсе келгенде иштейт\n\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn'); //бул жерде болсо localStorage ти тазалап турат \n\n    setIsLoggedIn(false);\n  }; //регистрация туура аткарылгандан кийин logout кнопкасын бассак кайра башынан формага кайтабыз\n  //\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Home","MainHeader","useEffect","App","isLoggedIn","setIsLoggedIn","stotredUserLoggedInfo","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"sources":["C:/Users/plann/Desktop/hw-15/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Login from './component/Login/Login'\nimport Home from './component/Home/Home';\nimport MainHeader from './component/MainHeader/MainHeader';\nimport { useEffect } from 'react';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);//useEffect теги запростун кайра кайталануусуна тассирин тийгизген параметр\n//анткени биз форманы толтурганда true болуп loginHandler функциясы иштейт дагы запрос кайра иштейт\n  \nuseEffect(() => {\n  const stotredUserLoggedInfo = localStorage.getItem('isLoggedIn') // ключ аркылуу item алсак болот\n\n  if(stotredUserLoggedInfo === '1'){ //бул жерде логика жазылып жатат эгер stotredUserLoggedInfo 1 ге барабар болсо setIsLoggedIn true болот\n  setIsLoggedIn(true)\n}\n}, [])\n\nconst loginHandler = async (email, password) => {\n    localStorage.setItem('isLoggedIn' , '1') //item бул жерде 1 себеби ал true болгону учун бир нерсе келгенде иштейт\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn') //бул жерде болсо localStorage ти тазалап турат \n    setIsLoggedIn(false);\n  };//регистрация туура аткарылгандан кийин logout кнопкасын бассак кайра башынан формага кайтабыз\n  //\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      {/* MainHeader де isLoggedIn берилет ал Navigation га пропс берилет жана onLagout да иштейт */}\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n            {/* Эгер регистрация болгон эмес болсо анда Login page иштейтформа ачылат */}\n        {isLoggedIn && <Home onLogout={logoutHandler} />} \n            {/* регистирация кылсак Home page иштейт */}\n\n      \n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C,CADa,CACuC;EACtD;;EAEAI,SAAS,CAAC,MAAM;IACd,MAAMI,qBAAqB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA9B,CADc,CACmD;;IAEjE,IAAGF,qBAAqB,KAAK,GAA7B,EAAiC;MAAE;MACnCD,aAAa,CAAC,IAAD,CAAb;IACD;EACA,CANQ,EAMN,EANM,CAAT;;EAQA,MAAMI,YAAY,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;IAC5CJ,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAoC,GAApC,EAD4C,CACH;;IACzCP,aAAa,CAAC,IAAD,CAAb;EACD,CAHH;;EAKE,MAAMQ,aAAa,GAAG,MAAM;IAC1BN,YAAY,CAACO,UAAb,CAAwB,YAAxB,EAD0B,CACY;;IACtCT,aAAa,CAAC,KAAD,CAAb;EACD,CAHD,CAjBa,CAoBX;EACF;;;EAEA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,UAAD;MAAY,eAAe,EAAED,UAA7B;MAAyC,QAAQ,EAAES;IAAnD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAA,WACG,CAACT,UAAD,iBAAe,QAAC,KAAD;QAAO,OAAO,EAAEK;MAAhB;QAAA;QAAA;QAAA;MAAA,QADlB,EAGGL,UAAU,iBAAI,QAAC,IAAD;QAAM,QAAQ,EAAES;MAAhB;QAAA;QAAA;QAAA;MAAA,QAHjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GArCQV,G;;KAAAA,G;AAuCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}